-- VHDL Entity project1_lib.scrambler.symbol
--
-- Created:
--          by - kim705.ews (evrt-252-23.ews.illinois.edu)
--          at - 22:33:02 10/01/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY scrambler IS
   PORT( 
      w  : IN     std_logic;
      x  : IN     std_logic;
      y  : IN     std_logic;
      z  : IN     std_logic;
      a0 : OUT    std_logic;
      a1 : OUT    std_logic;
      a2 : OUT    std_logic;
      a3 : OUT    std_logic
   );

-- Declarations

END scrambler ;

--
-- VHDL Architecture project1_lib.scrambler.struct
--
-- Created:
--          by - kim705.ews (evrt-252-23.ews.illinois.edu)
--          at - 22:33:03 10/01/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF scrambler IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL din0   : std_logic;
   SIGNAL din1   : std_logic;
   SIGNAL din2   : std_logic;
   SIGNAL dout   : std_logic;
   SIGNAL dout1  : std_logic;
   SIGNAL dout10 : std_logic;
   SIGNAL dout11 : std_logic;
   SIGNAL dout12 : std_logic;
   SIGNAL dout2  : std_logic;
   SIGNAL dout27 : std_logic;
   SIGNAL dout28 : std_logic;
   SIGNAL dout29 : std_logic;
   SIGNAL dout3  : std_logic;
   SIGNAL dout32 : std_logic;
   SIGNAL dout4  : std_logic;
   SIGNAL dout5  : std_logic;
   SIGNAL dout6  : std_logic;
   SIGNAL dout7  : std_logic;
   SIGNAL dout8  : std_logic;
   SIGNAL dout9  : std_logic;
   SIGNAL wnot   : std_logic;
   SIGNAL xnot   : std_logic;



BEGIN

   -- ModuleWare code(v1.7) for instance 'U_0' of 'and'
   dout29 <= w AND din2;

   -- ModuleWare code(v1.7) for instance 'U_2' of 'and'
   dout8 <= wnot AND xnot;

   -- ModuleWare code(v1.7) for instance 'U_3' of 'and'
   dout3 <= dout AND dout1;

   -- ModuleWare code(v1.7) for instance 'U_4' of 'and'
   dout7 <= x AND dout8;

   -- ModuleWare code(v1.7) for instance 'U_8' of 'and'
   dout4 <= din0 AND z;

   -- ModuleWare code(v1.7) for instance 'U_9' of 'and'
   dout10 <= x AND z;

   -- ModuleWare code(v1.7) for instance 'U_12' of 'and'
   dout11 <= dout9 AND dout10;

   -- ModuleWare code(v1.7) for instance 'U_18' of 'and'
   dout2 <= y AND z;

   -- ModuleWare code(v1.7) for instance 'U_21' of 'and'
   dout5 <= din1 AND y;

   -- ModuleWare code(v1.7) for instance 'U_39' of 'and'
   dout27 <= x AND y;

   -- ModuleWare code(v1.7) for instance 'U_40' of 'and'
   dout32 <= dout27 AND dout28;

   -- ModuleWare code(v1.7) for instance 'U_1' of 'inv'
   din2 <= NOT(x);

   -- ModuleWare code(v1.7) for instance 'U_5' of 'inv'
   dout9 <= NOT(w);

   -- ModuleWare code(v1.7) for instance 'U_22' of 'inv'
   a0 <= NOT(z);

   -- ModuleWare code(v1.7) for instance 'U_23' of 'inv'
   dout <= NOT(y);

   -- ModuleWare code(v1.7) for instance 'U_24' of 'inv'
   dout1 <= NOT(z);

   -- ModuleWare code(v1.7) for instance 'U_26' of 'inv'
   wnot <= NOT(y);

   -- ModuleWare code(v1.7) for instance 'U_27' of 'inv'
   xnot <= NOT(z);

   -- ModuleWare code(v1.7) for instance 'U_28' of 'inv'
   din0 <= NOT(x);

   -- ModuleWare code(v1.7) for instance 'U_30' of 'inv'
   din1 <= NOT(x);

   -- ModuleWare code(v1.7) for instance 'U_48' of 'inv'
   dout28 <= NOT(w);

   -- ModuleWare code(v1.7) for instance 'U_11' of 'or'
   a1 <= dout2 OR dout3;

   -- ModuleWare code(v1.7) for instance 'U_15' of 'or'
   dout6 <= dout4 OR dout5;

   -- ModuleWare code(v1.7) for instance 'U_16' of 'or'
   a2 <= dout6 OR dout7;

   -- ModuleWare code(v1.7) for instance 'U_45' of 'or'
   dout12 <= dout29 OR dout11;

   -- ModuleWare code(v1.7) for instance 'U_46' of 'or'
   a3 <= dout12 OR dout32;

   -- Instance port mappings.

END struct;
